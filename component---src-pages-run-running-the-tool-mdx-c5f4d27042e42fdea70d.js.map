{"version":3,"file":"component---src-pages-run-running-the-tool-mdx-c5f4d27042e42fdea70d.js","mappings":"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","sources":["webpack://@upgrade-helper/gatsby-docs/./src/pages/run/running_the_tool.mdx","webpack://@upgrade-helper/gatsby-docs/./node_modules/gatsby-theme-carbon/src/components/PageHeader/index.js","webpack://@upgrade-helper/gatsby-docs/./node_modules/gatsby-theme-carbon/src/components/PageHeader/PageHeader.js","webpack://@upgrade-helper/gatsby-docs/./node_modules/gatsby-theme-carbon/src/components/PageHeader/PageHeader.module.scss","webpack://@upgrade-helper/gatsby-docs/./node_modules/gatsby-theme-carbon/src/components/EditLink/index.js","webpack://@upgrade-helper/gatsby-docs/./node_modules/gatsby-theme-carbon/src/components/EditLink/EditLink.js","webpack://@upgrade-helper/gatsby-docs/./node_modules/gatsby-theme-carbon/src/components/EditLink/EditLink.module.scss","webpack://@upgrade-helper/gatsby-docs/./node_modules/gatsby-theme-carbon/src/components/PageTabs/PageTabs.js","webpack://@upgrade-helper/gatsby-docs/./node_modules/gatsby-theme-carbon/src/components/PageTabs/PageTabs.module.scss","webpack://@upgrade-helper/gatsby-docs/./node_modules/gatsby-theme-carbon/src/components/PageTabs/index.js","webpack://@upgrade-helper/gatsby-docs/./node_modules/gatsby-theme-carbon/src/components/LastModifiedDate/index.js","webpack://@upgrade-helper/gatsby-docs/./node_modules/gatsby-theme-carbon/src/components/LastModifiedDate/LastModifiedDate.js","webpack://@upgrade-helper/gatsby-docs/./node_modules/gatsby-theme-carbon/src/components/LastModifiedDate/last-modified-date.module.scss","webpack://@upgrade-helper/gatsby-docs/./node_modules/gatsby-theme-carbon/src/templates/Default.js"],"sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/runner/work/spm-ui-upgrade-helper/spm-ui-upgrade-helper/packages/gatsby-docs/node_modules/gatsby-theme-carbon/src/templates/Default.js\";\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst InlineNotification = makeShortcode(\"InlineNotification\");\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <p>{`Complete the following steps to configure and run the tool and to review and implement any required changes.`}</p>\n    <ol>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`Run `}<inlineCode parentName=\"p\">{`docker login`}</inlineCode>{`.`}</p>\n      </li>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`Download the appropriate batch file or shell script for your environment:`}</p>\n        <p parentName=\"li\">{`Windows ™️`}</p>\n        <p parentName=\"li\"><inlineCode parentName=\"p\">{`curl -L https://raw.githubusercontent.com/IBM/spm-ui-upgrade-helper/main/spm-ui-upgrade-helper.bat -o spm-ui-upgrade-helper.bat`}</inlineCode></p>\n        <p parentName=\"li\">{`Linux ®️`}</p>\n        <p parentName=\"li\"><inlineCode parentName=\"p\">{`curl -L https://raw.githubusercontent.com/IBM/spm-ui-upgrade-helper/main/spm-ui-upgrade-helper.sh -o spm-ui-upgrade-helper.sh`}</inlineCode></p>\n      </li>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`(Linux®️ only) Make the shell script executable with `}<inlineCode parentName=\"p\">{`chmod +x spm-ui-upgrade-helper.sh`}</inlineCode></p>\n      </li>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`Download the docker-compose.yml file:`}</p>\n        <p parentName=\"li\">{`Windows ™️`}</p>\n        <p parentName=\"li\"><inlineCode parentName=\"p\">{`curl -L https://raw.githubusercontent.com/IBM/spm-ui-upgrade-helper/main/docker-compose.yml -o docker-compose.yml`}</inlineCode></p>\n        <p parentName=\"li\">{`Linux ®️`}</p>\n        <p parentName=\"li\"><inlineCode parentName=\"p\">{`curl -L https://raw.githubusercontent.com/IBM/spm-ui-upgrade-helper/main/docker-compose.yml -o docker-compose.yml`}</inlineCode></p>\n      </li>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`Run `}<inlineCode parentName=\"p\">{`chmod -R 777 <output_folder>`}</inlineCode>{` so that Docker can interact with the temporary output folder. For example, `}<inlineCode parentName=\"p\">{`C:\\\\temp\\\\upgrade`}</inlineCode>{` or `}<inlineCode parentName=\"p\">{`/tmp/upgrade`}</inlineCode>{`.`}</p>\n      </li>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`Set the required variables and run the batch file or shell script:`}</p>\n <InlineNotification mdxType=\"InlineNotification\">\n          <p parentName=\"li\">{` Warning:  Do not point the output folder at your version 8 development environment as it is a temporary folder that is wiped each time that the UI Upgrade Helper runs.`}</p>\n </InlineNotification>\n        <p parentName=\"li\">{`Windows ™️`}</p>\n        <pre parentName=\"li\"><code parentName=\"pre\" {...{\n            \"className\": \"language-batch\"\n          }}>{`Set INPUT_FOLDER=\\`<input_folder>\\`\nSet OUTPUT_FOLDER=\\`<output_folder>\\`\nSet VERSION=\\`<version>\\`\nspm-ui-upgrade-helper.bat\n`}</code></pre>\n        <p parentName=\"li\">{`Linux ®️`}</p>\n        <pre parentName=\"li\"><code parentName=\"pre\" {...{\n            \"className\": \"language-bash\"\n          }}>{`export INPUT_FOLDER=\\`<input_folder>\nexport OUTPUT_FOLDER=\\`<output_folder>\\`\nexport VERSION=\\`<version>\\` \nsh spm-ui-upgrade-helper.sh\n`}</code></pre>\n        <p parentName=\"li\">{`Where:`}</p>\n        <ul parentName=\"li\">\n          <li parentName=\"ul\"><inlineCode parentName=\"li\">{`VERSION`}</inlineCode>{` is the version of the tool on DockerHub -typically `}<inlineCode parentName=\"li\">{`latest`}</inlineCode>{`.`}</li>\n          <li parentName=\"ul\"><inlineCode parentName=\"li\">{`INPUT_FOLDER`}</inlineCode>{` is the absolute path to the input files for the tool. Typically this is the Social Program Management installation folder, which by default is `}<inlineCode parentName=\"li\">{`C:\\\\IBM\\\\Curam\\\\Development`}</inlineCode>{` or `}<inlineCode parentName=\"li\">{`opt/IBM/Curam/Development`}</inlineCode>{`.`}</li>\n          <li parentName=\"ul\"><inlineCode parentName=\"li\">{`OUTPUT_FOLDER`}</inlineCode>{` is the absolute path to your temporary output folder. For example, `}<inlineCode parentName=\"li\">{`C:\\\\temp\\\\upgrade`}</inlineCode>{` or `}<inlineCode parentName=\"li\">{`/tmp/upgrade`}</inlineCode>{`.`}</li>\n        </ul>\n      </li>\n    </ol>\n    <h2>{`Run the tool and review the changes`}</h2>\n    <ol>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`Open your browser to `}<a parentName=\"p\" {...{\n            \"href\": \"http://localhost:3000/#/home/workspace\"\n          }}>{`http://localhost:3000/#/home/workspace`}</a>{`.`}</p>\n      </li>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`Press the F1 key or Cmd + Shift + p.`}</p>\n      </li>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`Type “Run SPM UI Upgrade Helper” and click on the shortcut. The files in the `}<inlineCode parentName=\"p\">{`input`}</inlineCode>{` folder are scanned and the results are placed in the `}<inlineCode parentName=\"p\">{`output`}</inlineCode>{` folder.`}</p>\n      </li>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`Wait a few minutes for the tool to finish.`}</p>\n      </li>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`Click the `}<inlineCode parentName=\"p\">{`Source Control: Git`}</inlineCode>{` button on the left sidebar to inspect the changes.`}</p>\n        <img parentName=\"li\" {...{\n          \"src\": \"/spm-ui-upgrade-helper/d9be6be1041ad9537325beb9cef2a05a/upgrade-helper.gif\",\n          \"alt\": \"1. Press F1, 2. Type \\\"Run SPM UI Upgrade Helper\\\", 3. Select the shortcut, 4. Wait for the tool to finish, 5. Click \\\"Source Control: Git\\\" to see the output\",\n          \"title\": \"Running the UI Upgrade Helper tool\"\n        }}></img>\n      </li>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`For more information about Window Size Tool changes, see `}<a parentName=\"p\" {...{\n            \"href\": \"../../setup/tools#reviewing-window-size-tool-changes\"\n          }}>{`Reviewing Window Size Tool changes`}</a>{`.`}</p>\n      </li>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`When you are happy with the changes, copy the contents of the `}<inlineCode parentName=\"p\">{`output`}</inlineCode>{` folder into your v8 development environment.`}</p>\n      </li>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`Build and test your v8 development environment.`}</p>\n      </li>\n    </ol>\n    <h2>{`Errors`}</h2>\n    <p>{`Docker container logs are available in the console, or by using `}<inlineCode parentName=\"p\">{`docker logs spm-ui-upgrade-helper`}</inlineCode>{`.`}</p>\n    <p>{`You can save the logs to a file. For example, by using `}<inlineCode parentName=\"p\">{`docker logs spm-ui-upgrade-helper > /tmp/logs.txt`}</inlineCode>{`.`}</p>\n    <h2>{`Troubleshooting`}</h2>\n    <ul>\n      <li parentName=\"ul\">{`Ensure that you are logged in to Docker, (run `}<inlineCode parentName=\"li\">{`docker login`}</inlineCode>{`).`}</li>\n      <li parentName=\"ul\">{`Ensure that the correct folders are shared in Docker Desktop.`}</li>\n      <li parentName=\"ul\">{`Restart Docker Desktop.`}</li>\n      <li parentName=\"ul\">{`Delete the `}<inlineCode parentName=\"li\">{`<output_folder>`}</inlineCode>{` and try again.`}</li>\n      <li parentName=\"ul\">{`Make sure you have run `}<inlineCode parentName=\"li\">{`chmod -R 777 <output_folder>`}</inlineCode>{` so that Docker can write to it.`}</li>\n      <li parentName=\"ul\">{`Don’t refresh `}<a parentName=\"li\" {...{\n          \"href\": \"http://localhost:3000/#/home/workspace/output\"\n        }}>{`http://localhost:3000/#/home/workspace/output`}</a>{`, but go to `}<a parentName=\"li\" {...{\n          \"href\": \"http://localhost:3000/#/home/workspace\"\n        }}>{`http://localhost:3000/#/home/workspace`}</a>{`.`}</li>\n      <li parentName=\"ul\">{`To kill the Docker container, use `}<inlineCode parentName=\"li\">{`docker stop spm-ui-upgrade-helper`}</inlineCode>{` followed by `}<inlineCode parentName=\"li\">{`docker rm spm-ui-upgrade-helper`}</inlineCode>{`.`}</li>\n    </ul>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      ","import PageHeader from './PageHeader';\n\nexport default PageHeader;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport cx from 'classnames';\nimport * as styles from './PageHeader.module.scss';\n\nconst PageHeader = ({ title, theme, tabs = [] }) => (\n  <div\n    className={cx(styles.pageHeader, {\n      [styles.withTabs]: tabs.length,\n      [styles.darkMode]: theme === 'dark',\n    })}>\n    <div className=\"bx--grid\">\n      <div className=\"bx--row\">\n        <div className=\"bx--col-lg-12\">\n          <h1 id=\"page-title\" className={styles.text}>\n            {title}\n          </h1>\n        </div>\n      </div>\n    </div>\n  </div>\n);\n\nPageHeader.propTypes = {\n  /**\n   * Specify the title for the page\n   */\n  title: PropTypes.node,\n};\n\nexport default PageHeader;\n","// extracted by mini-css-extract-plugin\nexport var bxTextTruncateEnd = \"PageHeader-module--bx--text-truncate--end--2YQt4\";\nexport var bxTextTruncateFront = \"PageHeader-module--bx--text-truncate--front--tZ7wT\";\nexport var darkMode = \"PageHeader-module--dark-mode--1snw_\";\nexport var pageHeader = \"PageHeader-module--page-header--PZk0n\";\nexport var text = \"PageHeader-module--text--1JBrD\";\nexport var withTabs = \"PageHeader-module--with-tabs--23d0d\";","import EditLink from './EditLink';\n\nexport default EditLink;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { graphql, useStaticQuery } from 'gatsby';\n\nimport { link, row } from './EditLink.module.scss';\n\nconst EditLink = ({ relativePagePath, repository: repositoryProp }) => {\n  const {\n    site: {\n      siteMetadata: { repository },\n    },\n  } = useStaticQuery(graphql`\n    query REPOSITORY_QUERY {\n      site {\n        siteMetadata {\n          repository {\n            baseUrl\n            subDirectory\n            branch\n          }\n        }\n      }\n    }\n  `);\n\n  const { baseUrl, subDirectory, branch } = repositoryProp || repository;\n\n  const href = `${baseUrl}/edit/${branch}${subDirectory}/src/pages${relativePagePath}`;\n\n  return baseUrl ? (\n    <div className={`bx--row ${row}`}>\n      <div className=\"bx--col\">\n        <a className={link} href={href}>\n          Edit this page on GitHub\n        </a>\n      </div>\n    </div>\n  ) : null;\n};\n\nEditLink.propTypes = {\n  repository: PropTypes.shape({\n    baseUrl: PropTypes.string,\n    subDirectory: PropTypes.string,\n    branch: PropTypes.string,\n  }),\n  relativePagePath: PropTypes.string,\n};\n\nexport default EditLink;\n","// extracted by mini-css-extract-plugin\nexport var bxTextTruncateEnd = \"EditLink-module--bx--text-truncate--end--1AAC8\";\nexport var bxTextTruncateFront = \"EditLink-module--bx--text-truncate--front--22DUg\";\nexport var link = \"EditLink-module--link--evBpU\";\nexport var row = \"EditLink-module--row--1Bhkt\";","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'gatsby';\nimport slugify from 'slugify';\nimport cx from 'classnames';\n\nimport {\n  tabsContainer,\n  list,\n  selectedItem,\n  listItem,\n  link,\n} from './PageTabs.module.scss';\n\nexport default class PageTabs extends React.Component {\n  render() {\n    const { title, tabs, slug } = this.props;\n    const currentTab = slug.split('/').filter(Boolean).slice(-1)[0];\n\n    const pageTabs = tabs.map((tab) => {\n      const slugifiedTab = slugify(tab, { lower: true, strict: true });\n      const selected = slugifiedTab === currentTab;\n      // matches with or without trailing slash: /?\n      // matches with or without hash link: (#.*)?\n      const currentTabRegex = new RegExp(`${currentTab}/?(#.*)?$`);\n      const href = slug.replace(currentTabRegex, slugifiedTab);\n      return (\n        <li key={tab} className={cx({ [selectedItem]: selected }, listItem)}>\n          <Link className={link} to={`${href}`}>\n            {tab}\n          </Link>\n        </li>\n      );\n    });\n\n    return (\n      <div className={tabsContainer}>\n        <div className=\"bx--grid\">\n          <div className=\"bx--row\">\n            <div className=\"bx--col-lg-12 bx--col-no-gutter\">\n              <nav aria-label={title}>\n                <ul className={list}>{pageTabs}</ul>\n              </nav>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nPageTabs.propTypes = {\n  tabs: PropTypes.array,\n  slug: PropTypes.string,\n};\n","// extracted by mini-css-extract-plugin\nexport var bxTextTruncateEnd = \"PageTabs-module--bx--text-truncate--end--1i3YZ\";\nexport var bxTextTruncateFront = \"PageTabs-module--bx--text-truncate--front--16QtI\";\nexport var link = \"PageTabs-module--link--NRtef\";\nexport var list = \"PageTabs-module--list--1kwNv\";\nexport var listItem = \"PageTabs-module--list-item--Iy7tm\";\nexport var selectedItem = \"PageTabs-module--selected-item--18GsE\";\nexport var tabsContainer = \"PageTabs-module--tabs-container--3frXa\";","import PageTabs from './PageTabs';\n\nexport default PageTabs;\n","import LastModifiedDate from './LastModifiedDate';\n\nexport default LastModifiedDate;\n","import React from 'react';\nimport { Row, Column } from '../Grid';\nimport * as styles from './last-modified-date.module.scss';\n\nconst LastModifiedDate = ({ date }) => {\n  const options = {\n    day: '2-digit',\n    year: 'numeric',\n    month: 'long',\n  };\n\n  const lastModified = new Date(date);\n\n  return date ? (\n    <Row className={styles.row}>\n      <Column>\n        <div className={styles.text}>\n          Page last updated: {lastModified.toLocaleDateString('en-GB', options)}\n          {/* // https://www-03preprod.ibm.com/support/knowledgecenter/ibm_style/dates-and-times.html */}\n        </div>\n      </Column>\n    </Row>\n  ) : null;\n};\nexport default LastModifiedDate;\n","// extracted by mini-css-extract-plugin\nexport var bxTextTruncateEnd = \"last-modified-date-module--bx--text-truncate--end--16-S5\";\nexport var bxTextTruncateFront = \"last-modified-date-module--bx--text-truncate--front--2nGuz\";\nexport var row = \"last-modified-date-module--row--pOpRN\";\nexport var text = \"last-modified-date-module--text--45Vrg\";","import React from 'react';\nimport slugify from 'slugify';\nimport { useStaticQuery, graphql } from 'gatsby';\n\nimport Utils from '../components/Utils';\nimport Layout from '../components/Layout';\nimport PageHeader from '../components/PageHeader';\nimport EditLink from '../components/EditLink';\nimport NextPrevious from '../components/NextPrevious';\nimport PageTabs from '../components/PageTabs';\nimport Main from '../components/Main';\nimport useMetadata from '../util/hooks/useMetadata';\nimport LastModifiedDate from '../components/LastModifiedDate';\n\nconst Default = ({ pageContext, children, location, Title }) => {\n  const { frontmatter = {}, relativePagePath, titleType } = pageContext;\n  const {\n    tabs,\n    title,\n    theme: frontmatterTheme,\n    description,\n    keywords,\n    date,\n  } = frontmatter;\n\n  const { interiorTheme } = useMetadata();\n\n  // get the path prefix if it exists\n  const {\n    site: { pathPrefix },\n  } = useStaticQuery(graphql`\n    query PATH_PREFIX_QUERY {\n      site {\n        pathPrefix\n      }\n    }\n  `);\n\n  // let gatsby handle prefixing\n  const slug = pathPrefix\n    ? location.pathname.replace(pathPrefix, '')\n    : location.pathname;\n\n  const getCurrentTab = () => {\n    if (!tabs) return '';\n    return (\n      slug.split('/').filter(Boolean).slice(-1)[0] ||\n      slugify(tabs[0], { lower: true })\n    );\n  };\n\n  const currentTab = getCurrentTab();\n\n  const theme = frontmatterTheme || interiorTheme;\n\n  return (\n    <Layout\n      tabs={tabs}\n      homepage={false}\n      theme={theme}\n      pageTitle={title}\n      pageDescription={description}\n      pageKeywords={keywords}\n      titleType={titleType}>\n      <PageHeader\n        title={Title ? <Title /> : title}\n        label=\"label\"\n        tabs={tabs}\n        theme={theme}\n      />\n      {tabs && (\n        <PageTabs\n          title={title}\n          slug={slug}\n          tabs={tabs}\n          currentTab={currentTab}\n        />\n      )}\n      <Main padded>\n        {children}\n        <EditLink relativePagePath={relativePagePath} />\n        <LastModifiedDate date={date} />\n      </Main>\n      <NextPrevious\n        pageContext={pageContext}\n        location={location}\n        slug={slug}\n        tabs={tabs}\n        currentTab={currentTab}\n      />\n      <Utils />\n    </Layout>\n  );\n};\n\nexport default Default;\n"],"names":["name","_frontmatter","InlineNotification","props","console","warn","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","mdxType","parentName","isMDXComponent","title","theme","tabs","className","cx","length","id","relativePagePath","repositoryProp","repository","useStaticQuery","site","siteMetadata","baseUrl","subDirectory","href","branch","PageTabs","render","this","slug","currentTab","split","filter","Boolean","slice","pageTabs","map","tab","slugifiedTab","slugify","lower","strict","selected","currentTabRegex","RegExp","replace","key","Link","to","React","date","lastModified","Date","toLocaleDateString","day","year","month","pageContext","children","location","Title","frontmatter","titleType","frontmatterTheme","description","keywords","interiorTheme","useMetadata","pathPrefix","pathname","Layout","homepage","pageTitle","pageDescription","pageKeywords","label","Main","padded","NextPrevious","Utils"],"sourceRoot":""}