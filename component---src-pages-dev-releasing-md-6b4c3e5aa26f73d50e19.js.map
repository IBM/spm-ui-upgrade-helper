{"version":3,"file":"component---src-pages-dev-releasing-md-6b4c3e5aa26f73d50e19.js","mappings":"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","sources":["webpack://@upgrade-helper/gatsby-docs/./src/pages/dev/releasing.md","webpack://@upgrade-helper/gatsby-docs/./node_modules/gatsby-theme-carbon/src/components/PageHeader/index.js","webpack://@upgrade-helper/gatsby-docs/./node_modules/gatsby-theme-carbon/src/components/PageHeader/PageHeader.js","webpack://@upgrade-helper/gatsby-docs/./node_modules/gatsby-theme-carbon/src/components/PageHeader/PageHeader.module.scss","webpack://@upgrade-helper/gatsby-docs/./node_modules/gatsby-theme-carbon/src/components/EditLink/index.js","webpack://@upgrade-helper/gatsby-docs/./node_modules/gatsby-theme-carbon/src/components/EditLink/EditLink.js","webpack://@upgrade-helper/gatsby-docs/./node_modules/gatsby-theme-carbon/src/components/EditLink/EditLink.module.scss","webpack://@upgrade-helper/gatsby-docs/./node_modules/gatsby-theme-carbon/src/components/PageTabs/PageTabs.js","webpack://@upgrade-helper/gatsby-docs/./node_modules/gatsby-theme-carbon/src/components/PageTabs/PageTabs.module.scss","webpack://@upgrade-helper/gatsby-docs/./node_modules/gatsby-theme-carbon/src/components/PageTabs/index.js","webpack://@upgrade-helper/gatsby-docs/./node_modules/gatsby-theme-carbon/src/components/LastModifiedDate/index.js","webpack://@upgrade-helper/gatsby-docs/./node_modules/gatsby-theme-carbon/src/components/LastModifiedDate/LastModifiedDate.js","webpack://@upgrade-helper/gatsby-docs/./node_modules/gatsby-theme-carbon/src/components/LastModifiedDate/last-modified-date.module.scss","webpack://@upgrade-helper/gatsby-docs/./node_modules/gatsby-theme-carbon/src/templates/Default.js"],"sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/runner/work/spm-ui-upgrade-helper/spm-ui-upgrade-helper/packages/gatsby-docs/node_modules/gatsby-theme-carbon/src/templates/Default.js\";\nexport const _frontmatter = {};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <ol>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`Start the release process`}</p>\n        <ul parentName=\"li\">\n          <li parentName=\"ul\">{`Document the release in `}<inlineCode parentName=\"li\">{`/docs/CHANGELOG.md`}</inlineCode></li>\n          <li parentName=\"ul\">{`Run `}<inlineCode parentName=\"li\">{`yarn release --start 0.0.1`}</inlineCode>\n            <ul parentName=\"li\">\n              <li parentName=\"ul\">{`This will run the tests, build the Docker image, create a release branch named `}<inlineCode parentName=\"li\">{`v0.0.1`}</inlineCode>{` and push the branch to GitHub`}</li>\n            </ul>\n          </li>\n        </ul>\n      </li>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`Release testing`}</p>\n        <ul parentName=\"li\">\n          <li parentName=\"ul\">{`Run `}<inlineCode parentName=\"li\">{`yarn at:install`}</inlineCode>{` to install Puppeteer`}</li>\n          <li parentName=\"ul\">{`Run `}<inlineCode parentName=\"li\">{`yarn at:generate-data kitchen-sink`}</inlineCode>{` to generate acceptance test data`}</li>\n          <li parentName=\"ul\">{`Run `}<inlineCode parentName=\"li\">{`acceptance-test.bat`}</inlineCode>{`/`}<inlineCode parentName=\"li\">{`acceptance-test.sh`}</inlineCode>{` to point the tool at the generated data`}</li>\n          <li parentName=\"ul\">{`Run `}<inlineCode parentName=\"li\">{`yarn at:test`}</inlineCode>{` to run Puppeteer tests against the generated data, or run the tool manually`}</li>\n          <li parentName=\"ul\">{`If issues are found when testing:`}\n            <ul parentName=\"li\">\n              <li parentName=\"ul\">{`Reproduce the issues on `}<inlineCode parentName=\"li\">{`main`}</inlineCode>{` and fix them there`}</li>\n              <li parentName=\"ul\">{`Cherry-pick the fixes into the `}<inlineCode parentName=\"li\">{`v0.0.1`}</inlineCode>{` branch`}</li>\n              <li parentName=\"ul\">{`Re-run `}<inlineCode parentName=\"li\">{`yarn build:release`}</inlineCode></li>\n            </ul>\n          </li>\n        </ul>\n      </li>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`Ship the release`}</p>\n        <ul parentName=\"li\">\n          <li parentName=\"ul\">{`Run `}<inlineCode parentName=\"li\">{`yarn release --ship`}</inlineCode>\n            <ul parentName=\"li\">\n              <li parentName=\"ul\">{`This will push the image to the Docker Hub as `}<inlineCode parentName=\"li\">{`<image name>:0.0.1`}</inlineCode>{` and `}<inlineCode parentName=\"li\">{`<image name>:latest`}</inlineCode>{`, tag the commit as `}<inlineCode parentName=\"li\">{`v0.0.1`}</inlineCode>{` and push the tag to GitHub`}</li>\n            </ul>\n          </li>\n          <li parentName=\"ul\">{`Publish the release`}\n            <ul parentName=\"li\">\n              <li parentName=\"ul\">{`To do this, edit the `}<inlineCode parentName=\"li\">{`v0.0.1`}</inlineCode>{` tag in the repoâ€™s `}<a parentName=\"li\" {...{\n                  \"href\": \"https://github.com/IBM/spm-ui-upgrade-helper/releases\"\n                }}>{`releases`}</a>{` section, use the contents of `}<inlineCode parentName=\"li\">{`/docs/CHANGELOG.md`}</inlineCode>{` as the description `}</li>\n            </ul>\n          </li>\n        </ul>\n      </li>\n    </ol>\n    <h2>{`Notes`}</h2>\n    <ul>\n      <li parentName=\"ul\">{`Release branches such as `}<inlineCode parentName=\"li\">{`v0.0.1`}</inlineCode>{` are never merged back into `}<inlineCode parentName=\"li\">{`main`}</inlineCode>{`. If issues are found then the correct process is to fix the issues on `}<inlineCode parentName=\"li\">{`main`}</inlineCode>{` and cherry-pick the fixes into the `}<inlineCode parentName=\"li\">{`v0.0.1`}</inlineCode>{` branch. This reduces the risk of regression caused by forgetting to merge or merging incorrectly.`}</li>\n      <li parentName=\"ul\">{`We upload to the Docker Hub here: `}<a parentName=\"li\" {...{\n          \"href\": \"https://hub.docker.com/repository/docker/ibmcom/spm-ui-upgrade-helper\"\n        }}>{`https://hub.docker.com/repository/docker/ibmcom/spm-ui-upgrade-helper`}</a></li>\n      <li parentName=\"ul\">{`Creating the release will create a `}<inlineCode parentName=\"li\">{`version.json`}</inlineCode>{` file with the version number, and building the image will create a `}<inlineCode parentName=\"li\">{`commit.json`}</inlineCode>{` file with the commit hash the release was built from. These will be included in the Docker image and can be used to help triage customer issues. This is why it is important to re-run `}<inlineCode parentName=\"li\">{`yarn build:release`}</inlineCode>{` every time the release branch changes, so that `}<inlineCode parentName=\"li\">{`commit.json`}</inlineCode>{` is accurate.`}</li>\n    </ul>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      ","import PageHeader from './PageHeader';\n\nexport default PageHeader;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport cx from 'classnames';\nimport * as styles from './PageHeader.module.scss';\n\nconst PageHeader = ({ title, theme, tabs = [] }) => (\n  <div\n    className={cx(styles.pageHeader, {\n      [styles.withTabs]: tabs.length,\n      [styles.darkMode]: theme === 'dark',\n    })}>\n    <div className=\"bx--grid\">\n      <div className=\"bx--row\">\n        <div className=\"bx--col-lg-12\">\n          <h1 id=\"page-title\" className={styles.text}>\n            {title}\n          </h1>\n        </div>\n      </div>\n    </div>\n  </div>\n);\n\nPageHeader.propTypes = {\n  /**\n   * Specify the title for the page\n   */\n  title: PropTypes.node,\n};\n\nexport default PageHeader;\n","// extracted by mini-css-extract-plugin\nexport var bxTextTruncateEnd = \"PageHeader-module--bx--text-truncate--end--2YQt4\";\nexport var bxTextTruncateFront = \"PageHeader-module--bx--text-truncate--front--tZ7wT\";\nexport var darkMode = \"PageHeader-module--dark-mode--1snw_\";\nexport var pageHeader = \"PageHeader-module--page-header--PZk0n\";\nexport var text = \"PageHeader-module--text--1JBrD\";\nexport var withTabs = \"PageHeader-module--with-tabs--23d0d\";","import EditLink from './EditLink';\n\nexport default EditLink;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { graphql, useStaticQuery } from 'gatsby';\n\nimport { link, row } from './EditLink.module.scss';\n\nconst EditLink = ({ relativePagePath, repository: repositoryProp }) => {\n  const {\n    site: {\n      siteMetadata: { repository },\n    },\n  } = useStaticQuery(graphql`\n    query REPOSITORY_QUERY {\n      site {\n        siteMetadata {\n          repository {\n            baseUrl\n            subDirectory\n            branch\n          }\n        }\n      }\n    }\n  `);\n\n  const { baseUrl, subDirectory, branch } = repositoryProp || repository;\n\n  const href = `${baseUrl}/edit/${branch}${subDirectory}/src/pages${relativePagePath}`;\n\n  return baseUrl ? (\n    <div className={`bx--row ${row}`}>\n      <div className=\"bx--col\">\n        <a className={link} href={href}>\n          Edit this page on GitHub\n        </a>\n      </div>\n    </div>\n  ) : null;\n};\n\nEditLink.propTypes = {\n  repository: PropTypes.shape({\n    baseUrl: PropTypes.string,\n    subDirectory: PropTypes.string,\n    branch: PropTypes.string,\n  }),\n  relativePagePath: PropTypes.string,\n};\n\nexport default EditLink;\n","// extracted by mini-css-extract-plugin\nexport var bxTextTruncateEnd = \"EditLink-module--bx--text-truncate--end--1AAC8\";\nexport var bxTextTruncateFront = \"EditLink-module--bx--text-truncate--front--22DUg\";\nexport var link = \"EditLink-module--link--evBpU\";\nexport var row = \"EditLink-module--row--1Bhkt\";","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'gatsby';\nimport slugify from 'slugify';\nimport cx from 'classnames';\n\nimport {\n  tabsContainer,\n  list,\n  selectedItem,\n  listItem,\n  link,\n} from './PageTabs.module.scss';\n\nexport default class PageTabs extends React.Component {\n  render() {\n    const { title, tabs, slug } = this.props;\n    const currentTab = slug.split('/').filter(Boolean).slice(-1)[0];\n\n    const pageTabs = tabs.map((tab) => {\n      const slugifiedTab = slugify(tab, { lower: true, strict: true });\n      const selected = slugifiedTab === currentTab;\n      // matches with or without trailing slash: /?\n      // matches with or without hash link: (#.*)?\n      const currentTabRegex = new RegExp(`${currentTab}/?(#.*)?$`);\n      const href = slug.replace(currentTabRegex, slugifiedTab);\n      return (\n        <li key={tab} className={cx({ [selectedItem]: selected }, listItem)}>\n          <Link className={link} to={`${href}`}>\n            {tab}\n          </Link>\n        </li>\n      );\n    });\n\n    return (\n      <div className={tabsContainer}>\n        <div className=\"bx--grid\">\n          <div className=\"bx--row\">\n            <div className=\"bx--col-lg-12 bx--col-no-gutter\">\n              <nav aria-label={title}>\n                <ul className={list}>{pageTabs}</ul>\n              </nav>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nPageTabs.propTypes = {\n  tabs: PropTypes.array,\n  slug: PropTypes.string,\n};\n","// extracted by mini-css-extract-plugin\nexport var bxTextTruncateEnd = \"PageTabs-module--bx--text-truncate--end--1i3YZ\";\nexport var bxTextTruncateFront = \"PageTabs-module--bx--text-truncate--front--16QtI\";\nexport var link = \"PageTabs-module--link--NRtef\";\nexport var list = \"PageTabs-module--list--1kwNv\";\nexport var listItem = \"PageTabs-module--list-item--Iy7tm\";\nexport var selectedItem = \"PageTabs-module--selected-item--18GsE\";\nexport var tabsContainer = \"PageTabs-module--tabs-container--3frXa\";","import PageTabs from './PageTabs';\n\nexport default PageTabs;\n","import LastModifiedDate from './LastModifiedDate';\n\nexport default LastModifiedDate;\n","import React from 'react';\nimport { Row, Column } from '../Grid';\nimport * as styles from './last-modified-date.module.scss';\n\nconst LastModifiedDate = ({ date }) => {\n  const options = {\n    day: '2-digit',\n    year: 'numeric',\n    month: 'long',\n  };\n\n  const lastModified = new Date(date);\n\n  return date ? (\n    <Row className={styles.row}>\n      <Column>\n        <div className={styles.text}>\n          Page last updated: {lastModified.toLocaleDateString('en-GB', options)}\n          {/* // https://www-03preprod.ibm.com/support/knowledgecenter/ibm_style/dates-and-times.html */}\n        </div>\n      </Column>\n    </Row>\n  ) : null;\n};\nexport default LastModifiedDate;\n","// extracted by mini-css-extract-plugin\nexport var bxTextTruncateEnd = \"last-modified-date-module--bx--text-truncate--end--16-S5\";\nexport var bxTextTruncateFront = \"last-modified-date-module--bx--text-truncate--front--2nGuz\";\nexport var row = \"last-modified-date-module--row--pOpRN\";\nexport var text = \"last-modified-date-module--text--45Vrg\";","import React from 'react';\nimport slugify from 'slugify';\nimport { useStaticQuery, graphql } from 'gatsby';\n\nimport Utils from '../components/Utils';\nimport Layout from '../components/Layout';\nimport PageHeader from '../components/PageHeader';\nimport EditLink from '../components/EditLink';\nimport NextPrevious from '../components/NextPrevious';\nimport PageTabs from '../components/PageTabs';\nimport Main from '../components/Main';\nimport useMetadata from '../util/hooks/useMetadata';\nimport LastModifiedDate from '../components/LastModifiedDate';\n\nconst Default = ({ pageContext, children, location, Title }) => {\n  const { frontmatter = {}, relativePagePath, titleType } = pageContext;\n  const {\n    tabs,\n    title,\n    theme: frontmatterTheme,\n    description,\n    keywords,\n    date,\n  } = frontmatter;\n\n  const { interiorTheme } = useMetadata();\n\n  // get the path prefix if it exists\n  const {\n    site: { pathPrefix },\n  } = useStaticQuery(graphql`\n    query PATH_PREFIX_QUERY {\n      site {\n        pathPrefix\n      }\n    }\n  `);\n\n  // let gatsby handle prefixing\n  const slug = pathPrefix\n    ? location.pathname.replace(pathPrefix, '')\n    : location.pathname;\n\n  const getCurrentTab = () => {\n    if (!tabs) return '';\n    return (\n      slug.split('/').filter(Boolean).slice(-1)[0] ||\n      slugify(tabs[0], { lower: true })\n    );\n  };\n\n  const currentTab = getCurrentTab();\n\n  const theme = frontmatterTheme || interiorTheme;\n\n  return (\n    <Layout\n      tabs={tabs}\n      homepage={false}\n      theme={theme}\n      pageTitle={title}\n      pageDescription={description}\n      pageKeywords={keywords}\n      titleType={titleType}>\n      <PageHeader\n        title={Title ? <Title /> : title}\n        label=\"label\"\n        tabs={tabs}\n        theme={theme}\n      />\n      {tabs && (\n        <PageTabs\n          title={title}\n          slug={slug}\n          tabs={tabs}\n          currentTab={currentTab}\n        />\n      )}\n      <Main padded>\n        {children}\n        <EditLink relativePagePath={relativePagePath} />\n        <LastModifiedDate date={date} />\n      </Main>\n      <NextPrevious\n        pageContext={pageContext}\n        location={location}\n        slug={slug}\n        tabs={tabs}\n        currentTab={currentTab}\n      />\n      <Utils />\n    </Layout>\n  );\n};\n\nexport default Default;\n"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","isMDXComponent","title","theme","tabs","className","cx","length","id","relativePagePath","repositoryProp","repository","useStaticQuery","site","siteMetadata","baseUrl","subDirectory","href","branch","PageTabs","render","this","slug","currentTab","split","filter","Boolean","slice","pageTabs","map","tab","slugifiedTab","slugify","lower","strict","selected","currentTabRegex","RegExp","replace","key","Link","to","React","date","lastModified","Date","toLocaleDateString","day","year","month","pageContext","children","location","Title","frontmatter","titleType","frontmatterTheme","description","keywords","interiorTheme","useMetadata","pathPrefix","pathname","Layout","homepage","pageTitle","pageDescription","pageKeywords","label","Main","padded","NextPrevious","Utils"],"sourceRoot":""}